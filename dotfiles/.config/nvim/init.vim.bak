"""""""""""""""""""""""""""""
"                _          "
"    ____ _   __(_)___ ___  "
"   / __ \ | / / / __ `__ \ "
"  / / / / |/ / / / / / / / "
" /_/ /_/|___/_/_/ /_/ /_/  "
"                           "
"""""""""""""""""""""""""""""
" UTF-8 encoding
set encoding=utf8

" Turn off Vi compatibility
set nocompatible

" Search settings
set ignorecase
set smartcase
set hlsearch
set incsearch

" Tabulation 
set tabstop=4
set softtabstop=4
set shiftwidth=4

set expandtab
set smarttab

" Line numbers
set number
set relativenumber

" Syntax highlight
syntax off

" Scrolling settings 
set so=30
set ttyfast

" Allow using mouse
set mouse=a

" Nvim command line
set wildmode=longest,list

" Allow system clipboard
set clipboard=unnamedplus

call plug#begin()

Plug 'scrooloose/nerdtree'
Plug 'preservim/nerdcommenter'
Plug 'ryanoasis/vim-devicons'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'ap/vim-css-color'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'dylanaraps/wal.vim'

call plug#end()

" Set colorsheme
colorscheme gruvbox
set background=dark

" Open NERDTree on start
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * NERDTree | wincmd p

" Включить/выключить NERDTree при нажатии \n
nnoremap <leader>n :NERDTreeToggle<CR>
" Юникодные иконки папок (Работает только с плагином vim-devicons)
let g:WebDevIconsUnicodeDecorateFolderNodes = 1
" Показывает количество строк в файлах
let g:NERDTreeFileLines = 1
" Игнорировать указанные папки
let g:NERDTreeIgnore = ['^node_modules$', '^__pycache__$']
" Close nvim if NERDTree is only opened tab 
autocmd BufEnter * if tabpagenr('$') == 1 && winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree() | quit | endif

let g:airline#extensions#tabline#enabled = 1
let g:airline_powerline_fonts = 1
let g:airline_statusline_ontop=0
let g:airline_theme='deus'
let g:airline#extensions#tabline#formatter = 'default'

" Switch between buffers with arrows
nnoremap <Right> :bnext<CR>
nnoremap <Left>  :bprevious<CR>
nnoremap <Up>    :bfirst<CR>
nnoremap <Down>  :blast<CR>

" Tab autocompele 
inoremap <expr> <Tab> coc#pum#visible() ? coc#pum#confirm() : "\<Tab>"

lua require'nvim-treesitter.configs'.setup{highlight={enable=true, additional_vim_regex_highlighting = false}}
